/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Config.Koneksi;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author laure
 */
public class menuDashboard extends javax.swing.JPanel {

    /**
     * Creates new form menuDashboard
     */
    private Connection conn;
    
    public menuDashboard() {
        initComponents();
        conn = Koneksi.getConnection();
        loadData();
        setTableModelAnggota();
        loadDataAnggota();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        base_Panel = new javax.swing.JPanel();
        anggota_panelRound = new Pallete.PanelRound();
        anggota_Label = new javax.swing.JLabel();
        jmlanggota_Label = new javax.swing.JLabel();
        logoanggota_Label = new javax.swing.JLabel();
        peminjaman_panelRound = new Pallete.PanelRound();
        peminjaman_Label = new javax.swing.JLabel();
        jmlpeminjaman_Label = new javax.swing.JLabel();
        logopeminjaman_Label = new javax.swing.JLabel();
        buku_panelRound = new Pallete.PanelRound();
        buku_Label = new javax.swing.JLabel();
        jmlbuku_Label = new javax.swing.JLabel();
        logobuku_Label = new javax.swing.JLabel();
        pengembalian_panelRound = new Pallete.PanelRound();
        pengembalian_Label = new javax.swing.JLabel();
        jmlpengembalian_Label = new javax.swing.JLabel();
        logopengembalian_Label = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        riwayat_Table = new javax.swing.JTable();
        riwayat_Label = new javax.swing.JLabel();
        dashboard_Label = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(561, 480));
        setLayout(new java.awt.CardLayout());

        base_Panel.setBackground(new java.awt.Color(255, 255, 255));

        anggota_panelRound.setBackground(new java.awt.Color(153, 255, 255));
        anggota_panelRound.setPreferredSize(new java.awt.Dimension(112, 87));
        anggota_panelRound.setRoundBottomLeft(20);
        anggota_panelRound.setRoundBottomRight(20);
        anggota_panelRound.setRoundTopLeft(20);
        anggota_panelRound.setRoundTopRight(20);
        anggota_panelRound.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                anggota_panelRoundMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                anggota_panelRoundMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                anggota_panelRoundMouseExited(evt);
            }
        });

        anggota_Label.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        anggota_Label.setText("Anggota");

        jmlanggota_Label.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jmlanggota_Label.setText("999");

        logoanggota_Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/lets-icons_group.png"))); // NOI18N

        javax.swing.GroupLayout anggota_panelRoundLayout = new javax.swing.GroupLayout(anggota_panelRound);
        anggota_panelRound.setLayout(anggota_panelRoundLayout);
        anggota_panelRoundLayout.setHorizontalGroup(
            anggota_panelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(anggota_panelRoundLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(anggota_panelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jmlanggota_Label)
                    .addComponent(anggota_Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logoanggota_Label)
                .addContainerGap(10, Short.MAX_VALUE))
        );
        anggota_panelRoundLayout.setVerticalGroup(
            anggota_panelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, anggota_panelRoundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(anggota_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jmlanggota_Label)
                .addGap(12, 12, 12))
            .addGroup(anggota_panelRoundLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(logoanggota_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        peminjaman_panelRound.setBackground(new java.awt.Color(153, 255, 255));
        peminjaman_panelRound.setPreferredSize(new java.awt.Dimension(112, 87));
        peminjaman_panelRound.setRoundBottomLeft(20);
        peminjaman_panelRound.setRoundBottomRight(20);
        peminjaman_panelRound.setRoundTopLeft(20);
        peminjaman_panelRound.setRoundTopRight(20);
        peminjaman_panelRound.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                peminjaman_panelRoundMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                peminjaman_panelRoundMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                peminjaman_panelRoundMouseExited(evt);
            }
        });

        peminjaman_Label.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        peminjaman_Label.setText("Peminjaman");

        jmlpeminjaman_Label.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jmlpeminjaman_Label.setText("999");

        logopeminjaman_Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/lucide_book-down.png"))); // NOI18N

        javax.swing.GroupLayout peminjaman_panelRoundLayout = new javax.swing.GroupLayout(peminjaman_panelRound);
        peminjaman_panelRound.setLayout(peminjaman_panelRoundLayout);
        peminjaman_panelRoundLayout.setHorizontalGroup(
            peminjaman_panelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(peminjaman_panelRoundLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(peminjaman_panelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jmlpeminjaman_Label)
                    .addComponent(peminjaman_Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logopeminjaman_Label)
                .addGap(10, 10, 10))
        );
        peminjaman_panelRoundLayout.setVerticalGroup(
            peminjaman_panelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, peminjaman_panelRoundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(peminjaman_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jmlpeminjaman_Label)
                .addGap(12, 12, 12))
            .addGroup(peminjaman_panelRoundLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(logopeminjaman_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        buku_panelRound.setBackground(new java.awt.Color(153, 255, 255));
        buku_panelRound.setPreferredSize(new java.awt.Dimension(112, 87));
        buku_panelRound.setRoundBottomLeft(20);
        buku_panelRound.setRoundBottomRight(20);
        buku_panelRound.setRoundTopLeft(20);
        buku_panelRound.setRoundTopRight(20);
        buku_panelRound.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buku_panelRoundMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buku_panelRoundMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buku_panelRoundMouseExited(evt);
            }
        });

        buku_Label.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        buku_Label.setText("Buku");

        jmlbuku_Label.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jmlbuku_Label.setText("999");

        logobuku_Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/lets-icons_book.png"))); // NOI18N

        javax.swing.GroupLayout buku_panelRoundLayout = new javax.swing.GroupLayout(buku_panelRound);
        buku_panelRound.setLayout(buku_panelRoundLayout);
        buku_panelRoundLayout.setHorizontalGroup(
            buku_panelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buku_panelRoundLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(buku_panelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jmlbuku_Label)
                    .addComponent(buku_Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logobuku_Label)
                .addContainerGap(8, Short.MAX_VALUE))
        );
        buku_panelRoundLayout.setVerticalGroup(
            buku_panelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buku_panelRoundLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(buku_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jmlbuku_Label)
                .addGap(12, 12, 12))
            .addGroup(buku_panelRoundLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(logobuku_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pengembalian_panelRound.setBackground(new java.awt.Color(153, 255, 255));
        pengembalian_panelRound.setPreferredSize(new java.awt.Dimension(112, 87));
        pengembalian_panelRound.setRoundBottomLeft(20);
        pengembalian_panelRound.setRoundBottomRight(20);
        pengembalian_panelRound.setRoundTopLeft(20);
        pengembalian_panelRound.setRoundTopRight(20);
        pengembalian_panelRound.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pengembalian_panelRoundMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pengembalian_panelRoundMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pengembalian_panelRoundMouseExited(evt);
            }
        });

        pengembalian_Label.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        pengembalian_Label.setText("Pengembalian");

        jmlpengembalian_Label.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jmlpengembalian_Label.setText("999");

        logopengembalian_Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/lucide_book-up-2.png"))); // NOI18N

        javax.swing.GroupLayout pengembalian_panelRoundLayout = new javax.swing.GroupLayout(pengembalian_panelRound);
        pengembalian_panelRound.setLayout(pengembalian_panelRoundLayout);
        pengembalian_panelRoundLayout.setHorizontalGroup(
            pengembalian_panelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pengembalian_panelRoundLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(pengembalian_panelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jmlpengembalian_Label)
                    .addComponent(pengembalian_Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logopengembalian_Label)
                .addGap(10, 10, 10))
        );
        pengembalian_panelRoundLayout.setVerticalGroup(
            pengembalian_panelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pengembalian_panelRoundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pengembalian_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jmlpengembalian_Label)
                .addGap(12, 12, 12))
            .addGroup(pengembalian_panelRoundLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(logopengembalian_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        riwayat_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(riwayat_Table);

        riwayat_Label.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        riwayat_Label.setText("Riwayat Anggota Perpustakaan");

        dashboard_Label.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        dashboard_Label.setText("Dashboard");

        javax.swing.GroupLayout base_PanelLayout = new javax.swing.GroupLayout(base_Panel);
        base_Panel.setLayout(base_PanelLayout);
        base_PanelLayout.setHorizontalGroup(
            base_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(base_PanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(base_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(riwayat_Label)
                    .addGroup(base_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(dashboard_Label)
                        .addGroup(base_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(base_PanelLayout.createSequentialGroup()
                                .addComponent(anggota_panelRound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buku_panelRound, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(peminjaman_panelRound, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pengembalian_panelRound, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        base_PanelLayout.setVerticalGroup(
            base_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(base_PanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(dashboard_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(base_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pengembalian_panelRound, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(peminjaman_panelRound, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(anggota_panelRound, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(buku_panelRound, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(riwayat_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        add(base_Panel, "card3");
    }// </editor-fold>//GEN-END:initComponents

    private void anggota_panelRoundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_anggota_panelRoundMouseClicked
        // TODO add your handling code here:
        anggota_panelRound.setBackground(new Color(215, 215, 215));
        
        setTableModelAnggota();
        loadDataAnggota();
        riwayat_Label.setText("Riwayat Anggota Perpustakaan");
    }//GEN-LAST:event_anggota_panelRoundMouseClicked

    private void anggota_panelRoundMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_anggota_panelRoundMouseEntered
        // TODO add your handling code here:
        anggota_panelRound.setBackground(new Color(235, 235, 235));
    }//GEN-LAST:event_anggota_panelRoundMouseEntered

    private void anggota_panelRoundMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_anggota_panelRoundMouseExited
        // TODO add your handling code here:
        anggota_panelRound.setBackground(new Color(153, 255, 255));
    }//GEN-LAST:event_anggota_panelRoundMouseExited

    private void peminjaman_panelRoundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peminjaman_panelRoundMouseClicked
        // TODO add your handling code here:
        peminjaman_panelRound.setBackground(new Color(215, 215, 215));
        
        setTableModelPeminjaman();
        loadDataPeminjaman();
        riwayat_Label.setText("Riwayat Peminjaman Buku");
    }//GEN-LAST:event_peminjaman_panelRoundMouseClicked

    private void peminjaman_panelRoundMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peminjaman_panelRoundMouseEntered
        // TODO add your handling code here:
        peminjaman_panelRound.setBackground(new Color(235, 235, 235));
    }//GEN-LAST:event_peminjaman_panelRoundMouseEntered

    private void peminjaman_panelRoundMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peminjaman_panelRoundMouseExited
        // TODO add your handling code here:
        peminjaman_panelRound.setBackground(new Color(153, 255, 255));
    }//GEN-LAST:event_peminjaman_panelRoundMouseExited

    private void buku_panelRoundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buku_panelRoundMouseClicked
        // TODO add your handling code here:
        buku_panelRound.setBackground(new Color(215, 215, 215));
        
        setTableModelBuku();
        loadDataBuku();
        riwayat_Label.setText("Riwayat Buku Perpustakaan");
    }//GEN-LAST:event_buku_panelRoundMouseClicked

    private void buku_panelRoundMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buku_panelRoundMouseEntered
        // TODO add your handling code here:
        buku_panelRound.setBackground(new Color(235, 235, 235));
    }//GEN-LAST:event_buku_panelRoundMouseEntered

    private void buku_panelRoundMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buku_panelRoundMouseExited
        // TODO add your handling code here:
        buku_panelRound.setBackground(new Color(153, 255, 255));
    }//GEN-LAST:event_buku_panelRoundMouseExited

    private void pengembalian_panelRoundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pengembalian_panelRoundMouseClicked
        // TODO add your handling code here:
        pengembalian_panelRound.setBackground(new Color(215, 215, 215));
        
        setTableModelPengembalian();
        loadDataPengembalian();
        riwayat_Label.setText("Riwayat Pengembalian Buku");
    }//GEN-LAST:event_pengembalian_panelRoundMouseClicked

    private void pengembalian_panelRoundMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pengembalian_panelRoundMouseEntered
        // TODO add your handling code here:
        pengembalian_panelRound.setBackground(new Color(235, 235, 235));
    }//GEN-LAST:event_pengembalian_panelRoundMouseEntered

    private void pengembalian_panelRoundMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pengembalian_panelRoundMouseExited
        // TODO add your handling code here:
        pengembalian_panelRound.setBackground(new Color(153, 255, 255));
    }//GEN-LAST:event_pengembalian_panelRoundMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel anggota_Label;
    private Pallete.PanelRound anggota_panelRound;
    private javax.swing.JPanel base_Panel;
    private javax.swing.JLabel buku_Label;
    private Pallete.PanelRound buku_panelRound;
    private javax.swing.JLabel dashboard_Label;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jmlanggota_Label;
    private javax.swing.JLabel jmlbuku_Label;
    private javax.swing.JLabel jmlpeminjaman_Label;
    private javax.swing.JLabel jmlpengembalian_Label;
    private javax.swing.JLabel logoanggota_Label;
    private javax.swing.JLabel logobuku_Label;
    private javax.swing.JLabel logopeminjaman_Label;
    private javax.swing.JLabel logopengembalian_Label;
    private javax.swing.JLabel peminjaman_Label;
    private Pallete.PanelRound peminjaman_panelRound;
    private javax.swing.JLabel pengembalian_Label;
    private Pallete.PanelRound pengembalian_panelRound;
    private javax.swing.JLabel riwayat_Label;
    private javax.swing.JTable riwayat_Table;
    // End of variables declaration//GEN-END:variables

    private int jmlAnggota(){
        int total = 0;
        
        try{
            String sql = "SELECT COUNT(*) AS total FROM Anggota";
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            
            if(rs.next()){
                total = rs.getInt("total");
            }
        } catch(Exception e){
            e.printStackTrace();
        }
        return total;
    }
    
    private int jmlBuku(){
        int total = 0;
        
        try{
            String sql = "SELECT COUNT(*) AS total FROM Buku";
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            
            if(rs.next()){
                total = rs.getInt("total");
            }
        } catch(Exception e){
            e.printStackTrace();
        }
        return total;
    }
    
    private int jmlPeminjaman(){
        int total = 0;
        
        try{
            String sql = "SELECT COUNT(*) AS total FROM Detail_Peminjaman";
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            
            if(rs.next()){
                total = rs.getInt("total");
            }
        } catch(Exception e){
            e.printStackTrace();
        }
        return total;
    }
    
    private int jmlPengembalian(){
        int total = 0;
        
        try{
            String sql = "SELECT COUNT(*) AS total FROM Detail_Peminjaman WHERE Status_Peminjaman = 'Sudah dikembalikan'";
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            
            if(rs.next()){
                total = rs.getInt("total");
            }
        } catch(Exception e){
            e.printStackTrace();
        }
        return total;
    }
    
    private void setTableModelAnggota() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Anggota");
        model.addColumn("Nama Anggota");
        model.addColumn("Email");
        model.addColumn("Telepon");
        model.addColumn("Tanggal Bergabung");
        model.addColumn("Jenis Kelamin");

        riwayat_Table.setModel(model);
    }
    
    private void setTableModelBuku() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Buku");
        model.addColumn("Judul Buku");
        model.addColumn("Kategori");
        model.addColumn("Pengarang");
        model.addColumn("Penerbit");
        model.addColumn("Tahun Terbit");
        model.addColumn("Stok Buku");

        riwayat_Table.setModel(model);
    }
    
    private void setTableModelPeminjaman() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Peminjaman");
        model.addColumn("Nama Anggota");
        model.addColumn("Judul Buku");
        model.addColumn("Pengarang");
        model.addColumn("Penerbit");
        model.addColumn("Jumlah Pinjam");
        
        riwayat_Table.setModel(model);
    }
    
    private void setTableModelPengembalian() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Pengembalian");
        model.addColumn("Nama Anggota");
        model.addColumn("Judul Buku");
        model.addColumn("Jumlah Denda");
        
        riwayat_Table.setModel(model);
    }
    
    private void loadDataAnggota() {
        DefaultTableModel model = (DefaultTableModel) riwayat_Table.getModel();
        model.setRowCount(0);

        try {
            String sql = "SELECT * FROM Anggota";
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("ID_Anggota"), rs.getString("Nama_Anggota"), rs.getString("Email"), rs.getString("Telepon"), rs.getString("Tanggal_Bergabung"), rs.getString("Jenis_Kelamin")});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void loadDataBuku() {
        DefaultTableModel model = (DefaultTableModel) riwayat_Table.getModel();
        model.setRowCount(0);

        try {
            String sql = "SELECT * FROM Buku";
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("ID_Buku"), rs.getString("Judul_Buku"), rs.getString("Kategori"), rs.getString("Pengarang_Buku"), rs.getString("Penerbit"), rs.getString("Tahun_Terbit"), rs.getString("Stok")});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void loadDataPeminjaman() {
        DefaultTableModel model = (DefaultTableModel) riwayat_Table.getModel();
        model.setRowCount(0);

        try {
            String sql = "SELECT Detail_Peminjaman.ID_Peminjaman, Nama_Anggota, Judul_Buku, Pengarang_Buku, "
                       + "Penerbit, Jumlah_Pinjam "
                       + "FROM Detail_Peminjaman "
                       + "INNER JOIN Buku ON Buku.ID_Buku = Detail_Peminjaman.ID_Buku "
                       + "INNER JOIN Peminjaman ON Peminjaman.ID_Peminjaman = Detail_Peminjaman.ID_Peminjaman "
                       + "INNER JOIN Anggota ON Anggota.ID_Anggota = Peminjaman.ID_Anggota ";

            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("ID_Peminjaman"),
                    rs.getString("Nama_Anggota"),
                    rs.getString("Judul_Buku"),
                    rs.getString("Pengarang_Buku"),
                    rs.getString("Penerbit"),
                    rs.getString("Jumlah_Pinjam")
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void loadDataPengembalian() {
        DefaultTableModel model = (DefaultTableModel) riwayat_Table.getModel();
        model.setRowCount(0);

        try {
            String sql = "SELECT Detail_Pengembalian.ID_Pengembalian, Nama_Anggota, Judul_Buku, Jumlah_Denda "
                       + "FROM Detail_Pengembalian "
                       + "INNER JOIN Buku ON Buku.ID_Buku = Detail_Pengembalian.ID_Buku "
                       + "INNER JOIN Pengembalian ON Pengembalian.ID_Pengembalian = Detail_Pengembalian.ID_Pengembalian "
                       + "INNER JOIN Peminjaman ON Peminjaman.ID_Peminjaman = Pengembalian.ID_Peminjaman "
                       + "INNER JOIN Anggota ON Anggota.ID_Anggota = Peminjaman.ID_Anggota ";

            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("ID_Pengembalian"),
                    rs.getString("Nama_Anggota"),
                    rs.getString("Judul_Buku"),
                    rs.getString("Jumlah_Denda")
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void loadData() {
        jmlanggota_Label.setText(String.valueOf(jmlAnggota()));
        jmlbuku_Label.setText(String.valueOf(jmlBuku()));
        jmlpeminjaman_Label.setText(String.valueOf(jmlPeminjaman()));
        jmlpengembalian_Label.setText(String.valueOf(jmlPengembalian()));
    }
}
