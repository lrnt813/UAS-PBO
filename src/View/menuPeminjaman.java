/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Config.Koneksi;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;


/**
 *
 * @author laure
 */
public class menuPeminjaman extends javax.swing.JPanel {

    /**
     * Creates new form menuDashboard
     */
    private final Connection conn;
    private String userID;
    
    public menuPeminjaman(String userID) {
        initComponents();
        
        conn = Koneksi.getConnection();
        this.userID = userID;
        detailpeminjaman_Label.setVisible(false);
        jScrollPane4.setVisible(false);
        setTableModel();
        setTableModelSementara();
        setTableModelDetail();
        loadData();
        loadDataSementara();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooser1 = new com.raven.datechooser.DateChooser();
        dateChooser2 = new com.raven.datechooser.DateChooser();
        viewpeminjaman_mainPanel = new javax.swing.JPanel();
        viewpeminjaman_Panel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        riwayat_Table = new javax.swing.JTable();
        detailpeminjaman_Label = new javax.swing.JLabel();
        menupeminjaman_Label = new javax.swing.JLabel();
        peminjaman_Label = new javax.swing.JLabel();
        add_Label = new javax.swing.JLabel();
        add_Button = new javax.swing.JButton();
        delete_Label = new javax.swing.JLabel();
        cancel_Label = new javax.swing.JLabel();
        cancel_Button = new javax.swing.JButton();
        search_Label = new javax.swing.JLabel();
        search_TextField = new javax.swing.JTextField();
        datapeminjaman_Label = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        detail_Table = new javax.swing.JTable();
        viewpeminjaman_addPanel = new javax.swing.JPanel();
        datapeminjaman_Label1 = new javax.swing.JLabel();
        menupeminjaman_Label2 = new javax.swing.JLabel();
        peminjaman_Label1 = new javax.swing.JLabel();
        save_Label = new javax.swing.JLabel();
        save_Button = new javax.swing.JButton();
        batal_Label = new javax.swing.JLabel();
        batal_Button = new javax.swing.JButton();
        telepon_Label = new javax.swing.JLabel();
        telepon_TextField = new javax.swing.JTextField();
        nama_Label = new javax.swing.JLabel();
        nama_TextField = new javax.swing.JTextField();
        email_Label = new javax.swing.JLabel();
        email_TextField = new javax.swing.JTextField();
        panelRound1 = new Pallete.PanelRound();
        id_Label = new javax.swing.JLabel();
        id_TextField = new javax.swing.JTextField();
        id_Label1 = new javax.swing.JLabel();
        peminjaman_TextField = new javax.swing.JTextField();
        id_Label3 = new javax.swing.JLabel();
        pengembalian_TextField = new javax.swing.JTextField();
        anggota_Label = new javax.swing.JLabel();
        anggota_TextField = new javax.swing.JTextField();
        setanggotaButton = new javax.swing.JButton();
        penerbit_Label = new javax.swing.JLabel();
        penerbit_TextField = new javax.swing.JTextField();
        judul_Label = new javax.swing.JLabel();
        judul_TextField = new javax.swing.JTextField();
        pengarang_Label = new javax.swing.JLabel();
        pengarang_TextField = new javax.swing.JTextField();
        buku_Label = new javax.swing.JLabel();
        buku_TextField = new javax.swing.JTextField();
        setbukuButton = new javax.swing.JButton();
        total_Label = new javax.swing.JLabel();
        jumlah_TextField = new javax.swing.JTextField();
        jumlah_Label = new javax.swing.JLabel();
        totalpinjam_Label = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        sementara_Table = new javax.swing.JTable();
        add_Label1 = new javax.swing.JLabel();
        ubah_Button = new javax.swing.JButton();
        delete_Label1 = new javax.swing.JLabel();
        delete_Button = new javax.swing.JButton();
        batal_Label1 = new javax.swing.JLabel();
        batal_Button1 = new javax.swing.JButton();

        dateChooser1.setTextRefernce(peminjaman_TextField);

        dateChooser2.setTextRefernce(pengembalian_TextField);

        setPreferredSize(new java.awt.Dimension(561, 480));
        setLayout(new java.awt.CardLayout());

        viewpeminjaman_mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        viewpeminjaman_mainPanel.setMaximumSize(new java.awt.Dimension(561, 480));
        viewpeminjaman_mainPanel.setMinimumSize(new java.awt.Dimension(561, 480));
        viewpeminjaman_mainPanel.setLayout(new java.awt.CardLayout());

        viewpeminjaman_Panel.setBackground(new java.awt.Color(255, 255, 255));
        viewpeminjaman_Panel.setMaximumSize(new java.awt.Dimension(561, 480));
        viewpeminjaman_Panel.setMinimumSize(new java.awt.Dimension(561, 480));
        viewpeminjaman_Panel.setPreferredSize(new java.awt.Dimension(561, 480));
        viewpeminjaman_Panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        riwayat_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        riwayat_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                riwayat_TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(riwayat_Table);

        viewpeminjaman_Panel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 520, 130));

        detailpeminjaman_Label.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        detailpeminjaman_Label.setText("Detail Peminjaman");
        viewpeminjaman_Panel.add(detailpeminjaman_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, 20));

        menupeminjaman_Label.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        menupeminjaman_Label.setText("Peminjaman");
        viewpeminjaman_Panel.add(menupeminjaman_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, -1, -1));

        peminjaman_Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/lucide_book-down (1).png"))); // NOI18N
        viewpeminjaman_Panel.add(peminjaman_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 11, -1, -1));

        add_Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon-park-outline_add.png"))); // NOI18N
        viewpeminjaman_Panel.add(add_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, 30));

        add_Button.setBackground(new java.awt.Color(0, 0, 0));
        add_Button.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        add_Button.setForeground(new java.awt.Color(255, 255, 255));
        add_Button.setText("       Tambah");
        add_Button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add_Button.setPreferredSize(new java.awt.Dimension(60, 26));
        add_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_ButtonActionPerformed(evt);
            }
        });
        viewpeminjaman_Panel.add(add_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 110, 30));

        delete_Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/material-symbols_delete-outline.png"))); // NOI18N
        viewpeminjaman_Panel.add(delete_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, -1, 30));

        cancel_Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/tabler_clock-cancel.png"))); // NOI18N
        viewpeminjaman_Panel.add(cancel_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, -1, 30));

        cancel_Button.setBackground(new java.awt.Color(255, 102, 0));
        cancel_Button.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        cancel_Button.setForeground(new java.awt.Color(255, 255, 255));
        cancel_Button.setText("       Cancel");
        cancel_Button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cancel_Button.setPreferredSize(new java.awt.Dimension(60, 26));
        cancel_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_ButtonActionPerformed(evt);
            }
        });
        viewpeminjaman_Panel.add(cancel_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 100, 30));

        search_Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/material-symbols_search.png"))); // NOI18N
        viewpeminjaman_Panel.add(search_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 120, -1, 30));

        search_TextField.setFont(new java.awt.Font("Times New Roman", 2, 12)); // NOI18N
        search_TextField.setText("Search");
        search_TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                search_TextFieldKeyTyped(evt);
            }
        });
        viewpeminjaman_Panel.add(search_TextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 520, 30));

        datapeminjaman_Label.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        datapeminjaman_Label.setText("Data Peminjaman");
        viewpeminjaman_Panel.add(datapeminjaman_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 11, -1, 35));

        detail_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(detail_Table);

        viewpeminjaman_Panel.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 520, 130));

        viewpeminjaman_mainPanel.add(viewpeminjaman_Panel, "card3");

        viewpeminjaman_addPanel.setBackground(new java.awt.Color(255, 255, 255));
        viewpeminjaman_addPanel.setMaximumSize(new java.awt.Dimension(561, 480));
        viewpeminjaman_addPanel.setMinimumSize(new java.awt.Dimension(561, 480));
        viewpeminjaman_addPanel.setPreferredSize(new java.awt.Dimension(561, 480));
        viewpeminjaman_addPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        datapeminjaman_Label1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        datapeminjaman_Label1.setText("Tambah Peminjaman Buku");
        viewpeminjaman_addPanel.add(datapeminjaman_Label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 11, -1, 35));

        menupeminjaman_Label2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        menupeminjaman_Label2.setText("Peminjaman");
        viewpeminjaman_addPanel.add(menupeminjaman_Label2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, -1, -1));

        peminjaman_Label1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/lucide_book-down (1).png"))); // NOI18N
        viewpeminjaman_addPanel.add(peminjaman_Label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 11, -1, -1));

        save_Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/tdesign_save.png"))); // NOI18N
        viewpeminjaman_addPanel.add(save_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, 30));

        save_Button.setBackground(new java.awt.Color(0, 51, 255));
        save_Button.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        save_Button.setForeground(new java.awt.Color(255, 255, 255));
        save_Button.setText("       Simpan");
        save_Button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        save_Button.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        save_Button.setPreferredSize(new java.awt.Dimension(60, 26));
        save_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_ButtonActionPerformed(evt);
            }
        });
        viewpeminjaman_addPanel.add(save_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 110, 30));

        batal_Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/tabler_clock-cancel.png"))); // NOI18N
        viewpeminjaman_addPanel.add(batal_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, -1, 30));

        batal_Button.setBackground(new java.awt.Color(255, 102, 0));
        batal_Button.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        batal_Button.setForeground(new java.awt.Color(255, 255, 255));
        batal_Button.setText("       Batal");
        batal_Button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        batal_Button.setPreferredSize(new java.awt.Dimension(60, 26));
        batal_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batal_ButtonActionPerformed(evt);
            }
        });
        viewpeminjaman_addPanel.add(batal_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 90, 30));

        telepon_Label.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        telepon_Label.setText("Telepon");
        viewpeminjaman_addPanel.add(telepon_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, -1));

        telepon_TextField.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        telepon_TextField.setForeground(new java.awt.Color(102, 102, 102));
        telepon_TextField.setText("No. Telepon");
        viewpeminjaman_addPanel.add(telepon_TextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 160, 20));

        nama_Label.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        nama_Label.setText("Nama");
        viewpeminjaman_addPanel.add(nama_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));

        nama_TextField.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        nama_TextField.setForeground(new java.awt.Color(102, 102, 102));
        nama_TextField.setText("Nama Anggota");
        viewpeminjaman_addPanel.add(nama_TextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 160, 20));

        email_Label.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        email_Label.setText("Email");
        viewpeminjaman_addPanel.add(email_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        email_TextField.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        email_TextField.setForeground(new java.awt.Color(102, 102, 102));
        email_TextField.setText("Email Anggota");
        viewpeminjaman_addPanel.add(email_TextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 160, 20));

        panelRound1.setBackground(new java.awt.Color(255, 204, 153));
        panelRound1.setRoundBottomLeft(20);
        panelRound1.setRoundBottomRight(20);
        panelRound1.setRoundTopLeft(20);
        panelRound1.setRoundTopRight(20);

        id_Label.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        id_Label.setText("ID");

        id_TextField.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N
        id_TextField.setForeground(new java.awt.Color(102, 102, 102));
        id_TextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        id_TextField.setText("ID Peminjaman");

        id_Label1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        id_Label1.setText("Peminjaman");

        peminjaman_TextField.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        peminjaman_TextField.setForeground(new java.awt.Color(102, 102, 102));
        peminjaman_TextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        id_Label3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        id_Label3.setText("Pengembalian");

        pengembalian_TextField.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        pengembalian_TextField.setForeground(new java.awt.Color(102, 102, 102));
        pengembalian_TextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout panelRound1Layout = new javax.swing.GroupLayout(panelRound1);
        panelRound1.setLayout(panelRound1Layout);
        panelRound1Layout.setHorizontalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(id_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(id_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(id_Label1)
                .addGap(5, 5, 5)
                .addComponent(peminjaman_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(id_Label3)
                .addGap(5, 5, 5)
                .addComponent(pengembalian_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        panelRound1Layout.setVerticalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound1Layout.createSequentialGroup()
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(id_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9))
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pengembalian_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(peminjaman_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelRound1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(id_Label3)
                            .addComponent(id_Label1))))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        viewpeminjaman_addPanel.add(panelRound1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 520, 40));

        anggota_Label.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        anggota_Label.setText("Anggota");
        viewpeminjaman_addPanel.add(anggota_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        anggota_TextField.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        anggota_TextField.setForeground(new java.awt.Color(102, 102, 102));
        anggota_TextField.setText("ID Anggota");
        viewpeminjaman_addPanel.add(anggota_TextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 130, 20));

        setanggotaButton.setText("...");
        setanggotaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setanggotaButtonActionPerformed(evt);
            }
        });
        viewpeminjaman_addPanel.add(setanggotaButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, -1, 20));

        penerbit_Label.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        penerbit_Label.setText("Penerbit");
        viewpeminjaman_addPanel.add(penerbit_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 300, -1, -1));

        penerbit_TextField.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        penerbit_TextField.setForeground(new java.awt.Color(102, 102, 102));
        penerbit_TextField.setText("Nama Penerbit");
        viewpeminjaman_addPanel.add(penerbit_TextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 320, 160, 20));

        judul_Label.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        judul_Label.setText("Judul");
        viewpeminjaman_addPanel.add(judul_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, -1, -1));

        judul_TextField.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        judul_TextField.setForeground(new java.awt.Color(102, 102, 102));
        judul_TextField.setText("Judul Buku");
        viewpeminjaman_addPanel.add(judul_TextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, 160, 20));

        pengarang_Label.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        pengarang_Label.setText("Pengarang");
        viewpeminjaman_addPanel.add(pengarang_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, -1, -1));

        pengarang_TextField.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        pengarang_TextField.setForeground(new java.awt.Color(102, 102, 102));
        pengarang_TextField.setText("Nama Pengarang");
        viewpeminjaman_addPanel.add(pengarang_TextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, 160, 20));

        buku_Label.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        buku_Label.setText("Buku");
        viewpeminjaman_addPanel.add(buku_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, -1, -1));

        buku_TextField.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        buku_TextField.setForeground(new java.awt.Color(102, 102, 102));
        buku_TextField.setText("ID Buku");
        viewpeminjaman_addPanel.add(buku_TextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 130, 20));

        setbukuButton.setText("...");
        setbukuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setbukuButtonActionPerformed(evt);
            }
        });
        viewpeminjaman_addPanel.add(setbukuButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 170, -1, 20));

        total_Label.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        total_Label.setText("TOTAL");
        viewpeminjaman_addPanel.add(total_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 240, 70, 50));

        jumlah_TextField.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jumlah_TextField.setForeground(new java.awt.Color(102, 102, 102));
        jumlah_TextField.setText("Jumlah");
        jumlah_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumlah_TextFieldActionPerformed(evt);
            }
        });
        viewpeminjaman_addPanel.add(jumlah_TextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 170, 140, 30));

        jumlah_Label.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jumlah_Label.setText("Jumlah");
        viewpeminjaman_addPanel.add(jumlah_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 150, -1, -1));

        totalpinjam_Label.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        totalpinjam_Label.setText("Total Pinjam");
        viewpeminjaman_addPanel.add(totalpinjam_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 220, -1, -1));

        sementara_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        sementara_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sementara_TableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(sementara_Table);

        viewpeminjaman_addPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 520, 80));

        add_Label1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon-park-outline_add (1).png"))); // NOI18N
        viewpeminjaman_addPanel.add(add_Label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 360, -1, 20));

        ubah_Button.setBackground(new java.awt.Color(0, 0, 0));
        ubah_Button.setFont(new java.awt.Font("Gadugi", 1, 11)); // NOI18N
        ubah_Button.setForeground(new java.awt.Color(255, 255, 255));
        ubah_Button.setText("       Tambah");
        ubah_Button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ubah_Button.setPreferredSize(new java.awt.Dimension(60, 26));
        ubah_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubah_ButtonActionPerformed(evt);
            }
        });
        viewpeminjaman_addPanel.add(ubah_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 360, 90, 20));

        delete_Label1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/material-symbols_delete-outline (1).png"))); // NOI18N
        viewpeminjaman_addPanel.add(delete_Label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 360, -1, 20));

        delete_Button.setBackground(new java.awt.Color(255, 0, 0));
        delete_Button.setFont(new java.awt.Font("Gadugi", 1, 11)); // NOI18N
        delete_Button.setForeground(new java.awt.Color(255, 255, 255));
        delete_Button.setText("    Hapus");
        delete_Button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        delete_Button.setPreferredSize(new java.awt.Dimension(60, 26));
        delete_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_ButtonActionPerformed(evt);
            }
        });
        viewpeminjaman_addPanel.add(delete_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 360, 80, 20));

        batal_Label1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/tabler_clock-cancel (1).png"))); // NOI18N
        viewpeminjaman_addPanel.add(batal_Label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 360, -1, 20));

        batal_Button1.setBackground(new java.awt.Color(255, 102, 0));
        batal_Button1.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        batal_Button1.setForeground(new java.awt.Color(255, 255, 255));
        batal_Button1.setText("      Batal");
        batal_Button1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        batal_Button1.setPreferredSize(new java.awt.Dimension(60, 26));
        batal_Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batal_Button1ActionPerformed(evt);
            }
        });
        viewpeminjaman_addPanel.add(batal_Button1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 360, 80, 20));

        viewpeminjaman_mainPanel.add(viewpeminjaman_addPanel, "card3");

        add(viewpeminjaman_mainPanel, "card3");
    }// </editor-fold>//GEN-END:initComponents

    private void add_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_ButtonActionPerformed
        // TODO add your handling code here:
        viewpeminjaman_mainPanel.removeAll();
        viewpeminjaman_mainPanel.add(viewpeminjaman_addPanel);
        viewpeminjaman_mainPanel.repaint();
        viewpeminjaman_mainPanel.revalidate();
        
        id_TextField.setText(setIDPeminjaman());
        id_TextField.setEnabled(false);
        
        ubah_Button.setText("       Tambah");
        batal_Label1.setVisible(false);
        batal_Button1.setVisible(false);
        delete_Label1.setVisible(false);
        delete_Button.setVisible(false);
        
        columnDisable();
    }//GEN-LAST:event_add_ButtonActionPerformed

    private void cancel_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_ButtonActionPerformed
        // TODO add your handling code here:
        showPanel();
        loadData();
    }//GEN-LAST:event_cancel_ButtonActionPerformed

    private void save_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_ButtonActionPerformed
        // TODO add your handling code here:
        if (save_Button.getText() == "Tambah") {
            save_Button.setText("       Simpan");
        } else if (save_Button.getText() == "       Simpan") {
            insertData();
            insertDataDetail();
            deleteDataSementara();
            resetForm();
            loadData();
            showPanel();
        }
    }//GEN-LAST:event_save_ButtonActionPerformed

    private void batal_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batal_ButtonActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah anda yakin ingin keluar ?", "Batal", JOptionPane.YES_NO_OPTION);
        
        if(confirm == JOptionPane.YES_OPTION){
            try{
                String sql = "DELETE FROM Sementara";
                try(PreparedStatement st = conn.prepareStatement(sql)){
                    st.executeUpdate();
                }
            } catch (Exception e){
                java.util.logging.Logger.getLogger(menuBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, e);
            }
            
            loadDataSementara();
        
            resetForm();
            viewpeminjaman_mainPanel.removeAll();
            viewpeminjaman_mainPanel.add(viewpeminjaman_Panel);
            viewpeminjaman_mainPanel.repaint();
            viewpeminjaman_mainPanel.revalidate();
        }
    }//GEN-LAST:event_batal_ButtonActionPerformed

    private void riwayat_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_riwayat_TableMouseClicked
        // TODO add your handling code here:
            delete_Button.setVisible(true);
            cancel_Button.setVisible(true);
            detailpeminjaman_Label.setVisible(true);
            
            jScrollPane4.setVisible(true);
            int row = riwayat_Table.getSelectedRow();
            String id = riwayat_Table.getValueAt(row, 0).toString();
            
            loadDataDetail(id);
    }//GEN-LAST:event_riwayat_TableMouseClicked

    private void search_TextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_TextFieldKeyTyped
        // TODO add your handling code here:
        searchData();
    }//GEN-LAST:event_search_TextFieldKeyTyped

    private void sementara_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sementara_TableMouseClicked
        // TODO add your handling code here:
        delete_Label1.setVisible(true);
        delete_Button.setVisible(true);
        batal_Label1.setVisible(true);
        batal_Button1.setVisible(true);
        ubah_Button.setText("      Perbarui");
        delete_Button.setVisible(true);
        dataTabelSementara();
    }//GEN-LAST:event_sementara_TableMouseClicked

    private void ubah_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubah_ButtonActionPerformed
        // TODO add your handling code here:
        if(ubah_Button.getText().equals("       Tambah")){
            insertDataSementara();
        } else if(ubah_Button.getText().equals("      Perbarui")){
            updateData();
            
            ubah_Button.setText("       Tambah");
            batal_Label1.setVisible(false);
            batal_Button1.setVisible(false);
            delete_Label1.setVisible(false);
            delete_Button.setVisible(false);
        }
    }//GEN-LAST:event_ubah_ButtonActionPerformed

    private void delete_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_ButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = sementara_Table.getSelectedRow();
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah yakin ingin menghapus data ini ?", "Konfirmasi Hapus Data", JOptionPane.YES_NO_OPTION);
        
        if(confirm == JOptionPane.YES_OPTION){
            String id = sementara_Table.getValueAt(selectedRow, 0).toString();
            try{
                String sql = "DELETE FROM Sementara WHERE ID_Buku=?";
                try(PreparedStatement st = conn.prepareStatement(sql)){
                    st.setString(1, id);
                    
                    int rowDeleted = st.executeUpdate();
                    if(rowDeleted > 0){
                        JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus");
                    } else{
                        JOptionPane.showMessageDialog(this, "Data Gagal Dihapus");
                    }
                }
            } catch (Exception e){
                java.util.logging.Logger.getLogger(menuBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, e);
            }
        }
        
        setbukuButton.setEnabled(true);
        setanggotaButton.setEnabled(false);
        int totalPinjam = getTotalPinjam();
        total_Label.setText(String.valueOf(totalPinjam));
        
        ubah_Button.setText("       Tambah");
        batal_Label1.setVisible(false);
        batal_Button1.setVisible(false);
        delete_Label1.setVisible(false);
        delete_Button.setVisible(false);
            
        resetFormBuku();
        loadDataSementara();
    }//GEN-LAST:event_delete_ButtonActionPerformed

    private void setanggotaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setanggotaButtonActionPerformed
        // TODO add your handling code here:
        setAnggota();
    }//GEN-LAST:event_setanggotaButtonActionPerformed

    private void setbukuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setbukuButtonActionPerformed
        // TODO add your handling code here:
        setBuku();
    }//GEN-LAST:event_setbukuButtonActionPerformed

    private void jumlah_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumlah_TextFieldActionPerformed
        // TODO add your handling code here:
        if(ubah_Button.getText().equals("       Tambah")){
            insertDataSementara();
        } else if(ubah_Button.getText().equals("      Perbarui")){
            updateData();
            
            ubah_Button.setText("       Tambah");
            batal_Label1.setVisible(false);
            batal_Button1.setVisible(false);
            delete_Label1.setVisible(false);
            delete_Button.setVisible(false);
        }
    }//GEN-LAST:event_jumlah_TextFieldActionPerformed

    private void batal_Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batal_Button1ActionPerformed
        // TODO add your handling code here:
        setbukuButton.setEnabled(true);
        batal_Label1.setVisible(false);
        batal_Button1.setVisible(false);
        delete_Label1.setVisible(false);
        delete_Button.setVisible(false);
        ubah_Button.setText("       Tambah");
        loadDataSementara();
    }//GEN-LAST:event_batal_Button1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_Button;
    private javax.swing.JLabel add_Label;
    private javax.swing.JLabel add_Label1;
    private javax.swing.JLabel anggota_Label;
    private javax.swing.JTextField anggota_TextField;
    private javax.swing.JButton batal_Button;
    private javax.swing.JButton batal_Button1;
    private javax.swing.JLabel batal_Label;
    private javax.swing.JLabel batal_Label1;
    private javax.swing.JLabel buku_Label;
    private javax.swing.JTextField buku_TextField;
    private javax.swing.JButton cancel_Button;
    private javax.swing.JLabel cancel_Label;
    private javax.swing.JLabel datapeminjaman_Label;
    private javax.swing.JLabel datapeminjaman_Label1;
    private com.raven.datechooser.DateChooser dateChooser1;
    private com.raven.datechooser.DateChooser dateChooser2;
    private javax.swing.JButton delete_Button;
    private javax.swing.JLabel delete_Label;
    private javax.swing.JLabel delete_Label1;
    private javax.swing.JTable detail_Table;
    private javax.swing.JLabel detailpeminjaman_Label;
    private javax.swing.JLabel email_Label;
    private javax.swing.JTextField email_TextField;
    private javax.swing.JLabel id_Label;
    private javax.swing.JLabel id_Label1;
    private javax.swing.JLabel id_Label3;
    private javax.swing.JTextField id_TextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel judul_Label;
    private javax.swing.JTextField judul_TextField;
    private javax.swing.JLabel jumlah_Label;
    private javax.swing.JTextField jumlah_TextField;
    private javax.swing.JLabel menupeminjaman_Label;
    private javax.swing.JLabel menupeminjaman_Label2;
    private javax.swing.JLabel nama_Label;
    private javax.swing.JTextField nama_TextField;
    private Pallete.PanelRound panelRound1;
    private javax.swing.JLabel peminjaman_Label;
    private javax.swing.JLabel peminjaman_Label1;
    private javax.swing.JTextField peminjaman_TextField;
    private javax.swing.JLabel penerbit_Label;
    private javax.swing.JTextField penerbit_TextField;
    private javax.swing.JLabel pengarang_Label;
    private javax.swing.JTextField pengarang_TextField;
    private javax.swing.JTextField pengembalian_TextField;
    private javax.swing.JTable riwayat_Table;
    private javax.swing.JButton save_Button;
    private javax.swing.JLabel save_Label;
    private javax.swing.JLabel search_Label;
    private javax.swing.JTextField search_TextField;
    private javax.swing.JTable sementara_Table;
    private javax.swing.JButton setanggotaButton;
    private javax.swing.JButton setbukuButton;
    private javax.swing.JLabel telepon_Label;
    private javax.swing.JTextField telepon_TextField;
    private javax.swing.JLabel total_Label;
    private javax.swing.JLabel totalpinjam_Label;
    private javax.swing.JButton ubah_Button;
    private javax.swing.JPanel viewpeminjaman_Panel;
    private javax.swing.JPanel viewpeminjaman_addPanel;
    private javax.swing.JPanel viewpeminjaman_mainPanel;
    // End of variables declaration//GEN-END:variables

    private void setTableModel() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Peminjaman");
        model.addColumn("Tanggal Peminjaman");
        model.addColumn("Tanggal Pengembalian");
        model.addColumn("Total Pinjam");
        model.addColumn("Nama Petugas");
        model.addColumn("Nama Anggota");

        riwayat_Table.setModel(model);
    }
    
    private void loadData() {
        DefaultTableModel model = (DefaultTableModel) riwayat_Table.getModel();
        delete_Button.setVisible(true);
        cancel_Button.setVisible(false);
        model.setRowCount(0);

        try {
            String sql = "SELECT ID_Peminjaman, Tanggal_Peminjaman, Tanggal_Pengembalian, "
                       + "Total_Pinjam, Nama_User, Nama_Anggota "
                       + "FROM Peminjaman "
                       + "INNER JOIN User ON User.ID_User = Peminjaman.ID_User "
                       + "INNER JOIN Anggota ON Anggota.ID_Anggota = Peminjaman.ID_Anggota";

            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("ID_Peminjaman"),
                    rs.getString("Tanggal_Peminjaman"),
                    rs.getString("Tanggal_Pengembalian"),
                    rs.getInt("Total_Pinjam"),
                    rs.getString("Nama_User"),
                    rs.getString("Nama_Anggota")
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
    private void resetForm() {
        id_TextField.setText("");
        peminjaman_TextField.setText("");
        pengembalian_TextField.setText("");
        
        setanggotaButton.setEnabled(true);
        anggota_TextField.setText("ID Anggota");
        nama_TextField.setText("Nama Anggota");
        email_TextField.setText("Email Anggota");
        telepon_TextField.setText("No. Telepon");
        
        setbukuButton.setEnabled(true);
        buku_TextField.setText("ID Buku");
        judul_TextField.setText("Judul Buku");
        pengarang_TextField.setText("Nama Pengarang");
        penerbit_TextField.setText("Nama Penerbit");
        
        jumlah_TextField.setText("Jumlah");
        total_Label.setText("TOTAL");
    }
    
    private void showPanel(){
        viewpeminjaman_mainPanel.removeAll();
        viewpeminjaman_mainPanel.add(new menuPeminjaman(userID));
        viewpeminjaman_mainPanel.repaint();
        viewpeminjaman_mainPanel.revalidate();
    }
    
    private String setIDPeminjaman() {
        String urutan = null;
        Date now = new Date();
        SimpleDateFormat noFormat = new SimpleDateFormat("yyMM");
        String no = noFormat.format(now);
        
        // Mengganti RIGHT dengan SUBSTR dan LENGTH untuk SQLite
        String sql = "SELECT SUBSTR(ID_Peminjaman, -4) AS Nomor FROM Peminjaman WHERE ID_Peminjaman LIKE 'PM" + no + "%' ORDER BY ID_Peminjaman DESC LIMIT 1";
    
        try (PreparedStatement st = conn.prepareStatement(sql)) {
            ResultSet rs = st.executeQuery();
            
            if (rs.next()) {
                int nomor = Integer.parseInt(rs.getString("Nomor")) + 1;
                urutan = "PM" + no + String.format("%03d", nomor);
            } else {
                urutan = "PM" + no + "0001";
            }
        } catch (Exception e) {
            java.util.logging.Logger.getLogger(menuPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, e);
        }
        
        return urutan; // Pastikan mengembalikan ID yang dihasilkan
    }

    private void insertData() {
        String idPeminjaman = id_TextField.getText();
        String tglPinjam = peminjaman_TextField.getText();
        String tglKembali = pengembalian_TextField.getText();
        String totalPinjam = total_Label.getText();
        String idAnggota = anggota_TextField.getText();

        if (idPeminjaman.isEmpty() || tglPinjam.isEmpty() || tglKembali.isEmpty() || totalPinjam.isEmpty() || idAnggota.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua Kolom harus diisi !", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            String sql = "INSERT INTO Peminjaman (ID_Peminjaman, Tanggal_Peminjaman, Tanggal_Pengembalian, Total_Pinjam, ID_Anggota, ID_User) VALUES (?,?,?,?,?,?)";
            try (PreparedStatement st = conn.prepareStatement(sql)) {
                st.setString(1, idPeminjaman);
                st.setString(2, tglPinjam);
                st.setString(3, tglKembali);
                st.setString(4, totalPinjam);
                st.setString(5, idAnggota);
                st.setString(6, userID);

                int rowInserted = st.executeUpdate();
                if (rowInserted > 0) {
                    JOptionPane.showMessageDialog(this, "Data Berhasil Ditambahkan");
                }
            }
        } catch (SQLException e) {
            java.util.logging.Logger.getLogger(menuPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, e);
        }
    }
    
    private void insertDataDetail() {
        String idPeminjaman = id_TextField.getText();
        
        try {
            String sql = "INSERT INTO Detail_Peminjaman (ID_Peminjaman, ID_Buku, Jumlah_Pinjam, Status_Peminjaman) SELECT '"+idPeminjaman+"', ID_Buku, Jumlah_Pinjam, Status_Pinjam FROM Sementara";
            try (PreparedStatement st = conn.prepareStatement(sql)) {
                st.executeUpdate();        
            } 
        }catch (SQLException e) {
            java.util.logging.Logger.getLogger(menuPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, e);
        }
    }

    private void dataTabelSementara() {
        int row = sementara_Table.getSelectedRow();
        
        setbukuButton.setEnabled(false);
        setanggotaButton.setEnabled(false);
        buku_TextField.setEnabled(false);
        judul_TextField.setEnabled(false);
        pengarang_TextField.setEnabled(false);
        penerbit_TextField.setEnabled(false);
        
        buku_TextField.setText(sementara_Table.getValueAt(row, 0).toString());
        judul_TextField.setText(sementara_Table.getValueAt(row, 1).toString());
        pengarang_TextField.setText(sementara_Table.getValueAt(row, 2).toString());
        penerbit_TextField.setText(sementara_Table.getValueAt(row, 3).toString());
        jumlah_TextField.setText(sementara_Table.getValueAt(row, 4).toString());
        
        jumlah_TextField.requestFocus();
    }

    private void updateData() {
        String idBuku = buku_TextField.getText();
        String jmlBuku = jumlah_TextField.getText();

        if (idBuku.isEmpty() || jmlBuku.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua Kolom harus diisi !", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            String sql = "UPDATE Sementara SET Jumlah_Pinjam=? WHERE ID_Buku=?";
            try (PreparedStatement st = conn.prepareStatement(sql)) {
                st.setString(1, jmlBuku);
                st.setString(2, idBuku);
                
                int rowUpdated = st.executeUpdate();
                if (rowUpdated > 0) {
                    JOptionPane.showMessageDialog(this, "Data Berhasil Diperbarui");
                    int totalPinjam = getTotalPinjam();
                    total_Label.setText(String.valueOf(totalPinjam));
                    setbukuButton.setEnabled(true);
                    setanggotaButton.setEnabled(false);
                    resetFormBuku();
                    loadDataSementara();
                }
            }
        } catch (SQLException e) {
            java.util.logging.Logger.getLogger(menuPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, e);
        }
    }

    private void searchData() {
        String kakun = search_TextField.getText();
        
        DefaultTableModel model = (DefaultTableModel) riwayat_Table.getModel();
        model.setRowCount(0);

        try {
            String sql = "SELECT ID_Peminjaman, Tanggal_Peminjaman, Tanggal_Pengembalian, "
                       + "Total_Pinjam, Nama_User, Nama_Anggota "
                       + "FROM Peminjaman "
                       + "INNER JOIN User ON User.ID_User = Peminjaman.ID_User "
                       + "INNER JOIN Anggota ON Anggota.ID_Anggota = Peminjaman.ID_Anggota " 
                       + "WHERE ID_Peminjaman LIKE ? OR Nama_Anggota LIKE ? OR Tanggal_Peminjaman LIKE ? OR Tanggal_Pengembalian LIKE ?";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setString(1, "%" + kakun + "%");
            st.setString(2, "%" + kakun + "%");
            st.setString(3, "%" + kakun + "%");
            st.setString(4, "%" + kakun + "%");
            ResultSet rs = st.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("ID_Peminjaman"), rs.getString("Tanggal_Peminjaman"), rs.getString("Tanggal_Pengembalian"), rs.getString("Total_Pinjam"), rs.getString("Nama_User"), rs.getString("Nama_Anggota")});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }}

    private void setAnggota() {
        boolean closeable = true;
        dataanggota_Dialog anggota = new dataanggota_Dialog(null, closeable);
        anggota.setVisible(true);
        
        anggota_TextField.setText(anggota.getIdAnggota());
        nama_TextField.setText(anggota.getNamaAnggota());
        email_TextField.setText(anggota.getEmailAnggota());
        telepon_TextField.setText(anggota.getTeleponAnggota());
        
        anggota_TextField.setEnabled(false);
        nama_TextField.setEnabled(false);
        email_TextField.setEnabled(false);
        telepon_TextField.setEnabled(false);
    }

    private void setBuku() {
        boolean closeable = true;
        databuku_Dialog buku = new databuku_Dialog(null, closeable);
        buku.setVisible(true);
        
        buku_TextField.setText(buku.getIdBuku());
        judul_TextField.setText(buku.getJudulBuku());
        pengarang_TextField.setText(buku.getPengarangBuku());
        penerbit_TextField.setText(buku.getPenerbitBuku());
        
        buku_TextField.setEnabled(false);
        judul_TextField.setEnabled(false);
        pengarang_TextField.setEnabled(false);
        penerbit_TextField.setEnabled(false);
    }

    private void insertDataSementara() {
        String idBuku = buku_TextField.getText();
        String judulBuku = judul_TextField.getText();
        String pengarangBuku = pengarang_TextField.getText();
        String penerbitBuku = penerbit_TextField.getText();
        int jmlBuku = Integer.parseInt(jumlah_TextField.getText());
        String statusPinjam = "Sedang dipinjam";

        if (idBuku.isEmpty() || judulBuku.isEmpty() || pengarangBuku.isEmpty() || penerbitBuku.isEmpty() || statusPinjam.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua Kolom harus diisi !", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(cekStok(idBuku, jmlBuku)){
            JOptionPane.showMessageDialog(this,"Stok Buku Tidak Tersedia!", "Peringatan", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            String sql = "INSERT INTO Sementara (ID_Buku, Judul_Buku, Pengarang_Buku, Penerbit, Jumlah_Pinjam, Status_Pinjam) VALUES (?,?,?,?,?,?)";
            try (PreparedStatement st = conn.prepareStatement(sql)) {
                st.setString(1, idBuku);
                st.setString(2, judulBuku);
                st.setString(3, pengarangBuku);
                st.setString(4, penerbitBuku);
                st.setInt(5, jmlBuku);
                st.setString(6, statusPinjam);

                st.executeUpdate();
                
                int totalPinjam = getTotalPinjam();
                total_Label.setText(String.valueOf(totalPinjam));
                loadDataSementara();
                
                if(JOptionPane.showConfirmDialog(this, "Mau Tambah Buku", "Konfirmasi", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
                    resetFormBuku();
                    setbukuButton.requestFocus();
                }else{
                    resetFormBuku();
                    save_Button.requestFocus();
                }
            }
          
            setanggotaButton.setEnabled(false);
            
        } catch (SQLException e) {
            java.util.logging.Logger.getLogger(menuPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, e);
        }
    }

    private int getTotalPinjam() {
        int totalPinjam = 0;
        
        try{
            String sql = "SELECT SUM(Jumlah_Pinjam) as total FROM Sementara";
            try(PreparedStatement st = conn.prepareStatement(sql)){
                ResultSet rs = st.executeQuery();
                if(rs.next()){
                    totalPinjam = rs.getInt("total");
                }
            }
        } catch (SQLException e){
            java.util.logging.Logger.getLogger(menuPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, e);
        }
        
        return totalPinjam;
    }

    private void loadDataSementara() {
        DefaultTableModel model = (DefaultTableModel) sementara_Table.getModel();
        model.setRowCount(0);

        try {
            String sql = "SELECT * FROM Sementara";

            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("ID_Buku"),
                    rs.getString("Judul_Buku"),
                    rs.getString("Pengarang_Buku"),
                    rs.getString("Penerbit"),
                    rs.getString("Jumlah_Pinjam")
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setTableModelSementara() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Buku");
        model.addColumn("Judul Buku");
        model.addColumn("Pengarang Buku");
        model.addColumn("Penerbit Buku");
        model.addColumn("Jumlah Pinjam");
        
        sementara_Table.setModel(model);
    }

    private void resetFormBuku() {
        buku_TextField.setText("");
        judul_TextField.setText("");
        pengarang_TextField.setText("");
        penerbit_TextField.setText("");
        jumlah_TextField.setText("");
    }

    private void deleteDataSementara() {
        try{
            String sql = "DELETE FROM Sementara";
                try(PreparedStatement st = conn.prepareStatement(sql)){
                    st.executeUpdate();
                }
        } catch (Exception e){
            java.util.logging.Logger.getLogger(menuBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, e);
        }
    }

    private void columnDisable() {
        anggota_TextField.setEnabled(false);
        nama_TextField.setEnabled(false);
        email_TextField.setEnabled(false);
        telepon_TextField.setEnabled(false);
        
        buku_TextField.setEnabled(false);
        judul_TextField.setEnabled(false);
        pengarang_TextField.setEnabled(false);
        penerbit_TextField.setEnabled(false);
    }

    private void setTableModelDetail() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Peminjaman");
        model.addColumn("Judul");
        model.addColumn("Pengarang");
        model.addColumn("Penerbit");
        model.addColumn("Jumlah Pinjam");
        
        detail_Table.setModel(model);
    }
    
    private void loadDataDetail(String id) {
        DefaultTableModel model = (DefaultTableModel) detail_Table.getModel();
        model.setRowCount(0);

        try {
            String sql = "SELECT ID_Peminjaman, Judul_Buku, Pengarang_Buku, "
                       + "Penerbit, Jumlah_Pinjam "
                       + "FROM Detail_Peminjaman "
                       + "INNER JOIN Buku ON Buku.ID_Buku = Detail_Peminjaman.ID_Buku "
                       + "WHERE Detail_Peminjaman.ID_Peminjaman = '"+id+"'";

            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("ID_Peminjaman"),
                    rs.getString("Judul_Buku"),
                    rs.getString("Pengarang_Buku"),
                    rs.getString("Penerbit"),
                    rs.getString("Jumlah_Pinjam")
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private boolean cekStok(String idBuku, int jmlPinjam) {
        try {
            String sql = "SELECT Stok FROM Buku WHERE ID_Buku=?";
            try (PreparedStatement st = conn.prepareStatement(sql)) {
                st.setString(1, idBuku);

                ResultSet rs = st.executeQuery();

                if (rs.next()) {
                    int stokTersedia = rs.getInt("Stok");
                    return jmlPinjam > stokTersedia;  // Return true if the requested amount exceeds available stock
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        return true;  // Return true if something goes wrong, assuming stock is insufficient
    }

}
